-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Block_proc24 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V_dout : IN STD_LOGIC_VECTOR (576 downto 0);
    input_V_empty_n : IN STD_LOGIC;
    input_V_read : OUT STD_LOGIC;
    output_V_din : OUT STD_LOGIC_VECTOR (576 downto 0);
    output_V_full_n : IN STD_LOGIC;
    output_V_write : OUT STD_LOGIC );
end;


architecture behav of Block_proc24 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_23E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal input_V_blk_n : STD_LOGIC;
    signal tmp_nbreadreq_fu_50_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_nbwritereq_fu_58_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_blk_n : STD_LOGIC;
    signal ap_predicate_op10_read_state1 : BOOLEAN;
    signal ap_predicate_op17_write_state1 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal tmp_4_fu_91_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_3_fu_101_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_data_out_tlast_s_fu_79_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_data_out_tkeep_s_fu_109_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_87_p1 : STD_LOGIC_VECTOR (510 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((output_V_full_n = ap_const_logic_0) and (ap_predicate_op17_write_state1 = ap_const_boolean_1)) or ((input_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, input_V_empty_n, output_V_full_n, ap_predicate_op10_read_state1, ap_predicate_op17_write_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, input_V_empty_n, output_V_full_n, ap_predicate_op10_read_state1, ap_predicate_op17_write_state1)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((output_V_full_n = ap_const_logic_0) and (ap_predicate_op17_write_state1 = ap_const_boolean_1)) or ((input_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, input_V_empty_n, output_V_full_n, ap_predicate_op10_read_state1, ap_predicate_op17_write_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((output_V_full_n = ap_const_logic_0) and (ap_predicate_op17_write_state1 = ap_const_boolean_1)) or ((input_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op10_read_state1_assign_proc : process(tmp_nbreadreq_fu_50_p3, tmp_1_nbwritereq_fu_58_p3)
    begin
                ap_predicate_op10_read_state1 <= ((tmp_1_nbwritereq_fu_58_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_50_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op17_write_state1_assign_proc : process(tmp_nbreadreq_fu_50_p3, tmp_1_nbwritereq_fu_58_p3)
    begin
                ap_predicate_op17_write_state1 <= ((tmp_1_nbwritereq_fu_58_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_50_p3 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, input_V_empty_n, output_V_full_n, ap_predicate_op10_read_state1, ap_predicate_op17_write_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((output_V_full_n = ap_const_logic_0) and (ap_predicate_op17_write_state1 = ap_const_boolean_1)) or ((input_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    input_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, input_V_empty_n, tmp_nbreadreq_fu_50_p3, tmp_1_nbwritereq_fu_58_p3)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_1_nbwritereq_fu_58_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_50_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_V_blk_n <= input_V_empty_n;
        else 
            input_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, input_V_empty_n, output_V_full_n, ap_predicate_op10_read_state1, ap_predicate_op17_write_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((output_V_full_n = ap_const_logic_0) and (ap_predicate_op17_write_state1 = ap_const_boolean_1)) or ((input_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_predicate_op10_read_state1 = ap_const_boolean_1))) then 
            input_V_read <= ap_const_logic_1;
        else 
            input_V_read <= ap_const_logic_0;
        end if; 
    end process;


    output_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, output_V_full_n, tmp_nbreadreq_fu_50_p3, tmp_1_nbwritereq_fu_58_p3)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_1_nbwritereq_fu_58_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_50_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_V_blk_n <= output_V_full_n;
        else 
            output_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_V_din <= (((temp_data_out_tlast_s_fu_79_p3 & temp_data_out_tkeep_s_fu_109_p2) & tmp_5_fu_87_p1) & ap_const_lv1_0);

    output_V_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, input_V_empty_n, output_V_full_n, ap_predicate_op10_read_state1, ap_predicate_op17_write_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((output_V_full_n = ap_const_logic_0) and (ap_predicate_op17_write_state1 = ap_const_boolean_1)) or ((input_V_empty_n = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_predicate_op17_write_state1 = ap_const_boolean_1))) then 
            output_V_write <= ap_const_logic_1;
        else 
            output_V_write <= ap_const_logic_0;
        end if; 
    end process;

    temp_data_out_tkeep_s_fu_109_p2 <= (tmp_3_fu_101_p3 or ap_const_lv64_1);
    temp_data_out_tlast_s_fu_79_p3 <= input_V_dout(576 downto 576);
    tmp_1_nbwritereq_fu_58_p3 <= (0=>output_V_full_n, others=>'-');
    tmp_3_fu_101_p3 <= (tmp_4_fu_91_p4 & ap_const_lv1_0);
    tmp_4_fu_91_p4 <= input_V_dout(574 downto 512);
    tmp_5_fu_87_p1 <= input_V_dout(511 - 1 downto 0);
    tmp_nbreadreq_fu_50_p3 <= (0=>input_V_empty_n, others=>'-');
end behav;
